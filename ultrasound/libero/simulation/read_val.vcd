$date
	Wed Sep  3 17:28:21 2025
$end
$version
	ModelSim Version 2024.2
$end
$timescale
	1ps
$end

$scope module read_val_tb $end
$var reg 1 ! clk $end
$var reg 1 " inc_count $end
$var reg 1 # reset $end
$var wire 1 $ val1 [15] $end
$var wire 1 % val1 [14] $end
$var wire 1 & val1 [13] $end
$var wire 1 ' val1 [12] $end
$var wire 1 ( val1 [11] $end
$var wire 1 ) val1 [10] $end
$var wire 1 * val1 [9] $end
$var wire 1 + val1 [8] $end
$var wire 1 , val1 [7] $end
$var wire 1 - val1 [6] $end
$var wire 1 . val1 [5] $end
$var wire 1 / val1 [4] $end
$var wire 1 0 val1 [3] $end
$var wire 1 1 val1 [2] $end
$var wire 1 2 val1 [1] $end
$var wire 1 3 val1 [0] $end
$var wire 1 4 val2 [15] $end
$var wire 1 5 val2 [14] $end
$var wire 1 6 val2 [13] $end
$var wire 1 7 val2 [12] $end
$var wire 1 8 val2 [11] $end
$var wire 1 9 val2 [10] $end
$var wire 1 : val2 [9] $end
$var wire 1 ; val2 [8] $end
$var wire 1 < val2 [7] $end
$var wire 1 = val2 [6] $end
$var wire 1 > val2 [5] $end
$var wire 1 ? val2 [4] $end
$var wire 1 @ val2 [3] $end
$var wire 1 A val2 [2] $end
$var wire 1 B val2 [1] $end
$var wire 1 C val2 [0] $end
$var wire 1 D val3 [15] $end
$var wire 1 E val3 [14] $end
$var wire 1 F val3 [13] $end
$var wire 1 G val3 [12] $end
$var wire 1 H val3 [11] $end
$var wire 1 I val3 [10] $end
$var wire 1 J val3 [9] $end
$var wire 1 K val3 [8] $end
$var wire 1 L val3 [7] $end
$var wire 1 M val3 [6] $end
$var wire 1 N val3 [5] $end
$var wire 1 O val3 [4] $end
$var wire 1 P val3 [3] $end
$var wire 1 Q val3 [2] $end
$var wire 1 R val3 [1] $end
$var wire 1 S val3 [0] $end
$var wire 1 T val4 [15] $end
$var wire 1 U val4 [14] $end
$var wire 1 V val4 [13] $end
$var wire 1 W val4 [12] $end
$var wire 1 X val4 [11] $end
$var wire 1 Y val4 [10] $end
$var wire 1 Z val4 [9] $end
$var wire 1 [ val4 [8] $end
$var wire 1 \ val4 [7] $end
$var wire 1 ] val4 [6] $end
$var wire 1 ^ val4 [5] $end
$var wire 1 _ val4 [4] $end
$var wire 1 ` val4 [3] $end
$var wire 1 a val4 [2] $end
$var wire 1 b val4 [1] $end
$var wire 1 c val4 [0] $end

$scope module DUT $end
$var wire 1 d clk $end
$var wire 1 e inc_count $end
$var wire 1 f reset $end
$var wire 1 $ val1 [15] $end
$var wire 1 % val1 [14] $end
$var wire 1 & val1 [13] $end
$var wire 1 ' val1 [12] $end
$var wire 1 ( val1 [11] $end
$var wire 1 ) val1 [10] $end
$var wire 1 * val1 [9] $end
$var wire 1 + val1 [8] $end
$var wire 1 , val1 [7] $end
$var wire 1 - val1 [6] $end
$var wire 1 . val1 [5] $end
$var wire 1 / val1 [4] $end
$var wire 1 0 val1 [3] $end
$var wire 1 1 val1 [2] $end
$var wire 1 2 val1 [1] $end
$var wire 1 3 val1 [0] $end
$var wire 1 4 val2 [15] $end
$var wire 1 5 val2 [14] $end
$var wire 1 6 val2 [13] $end
$var wire 1 7 val2 [12] $end
$var wire 1 8 val2 [11] $end
$var wire 1 9 val2 [10] $end
$var wire 1 : val2 [9] $end
$var wire 1 ; val2 [8] $end
$var wire 1 < val2 [7] $end
$var wire 1 = val2 [6] $end
$var wire 1 > val2 [5] $end
$var wire 1 ? val2 [4] $end
$var wire 1 @ val2 [3] $end
$var wire 1 A val2 [2] $end
$var wire 1 B val2 [1] $end
$var wire 1 C val2 [0] $end
$var wire 1 D val3 [15] $end
$var wire 1 E val3 [14] $end
$var wire 1 F val3 [13] $end
$var wire 1 G val3 [12] $end
$var wire 1 H val3 [11] $end
$var wire 1 I val3 [10] $end
$var wire 1 J val3 [9] $end
$var wire 1 K val3 [8] $end
$var wire 1 L val3 [7] $end
$var wire 1 M val3 [6] $end
$var wire 1 N val3 [5] $end
$var wire 1 O val3 [4] $end
$var wire 1 P val3 [3] $end
$var wire 1 Q val3 [2] $end
$var wire 1 R val3 [1] $end
$var wire 1 S val3 [0] $end
$var wire 1 T val4 [15] $end
$var wire 1 U val4 [14] $end
$var wire 1 V val4 [13] $end
$var wire 1 W val4 [12] $end
$var wire 1 X val4 [11] $end
$var wire 1 Y val4 [10] $end
$var wire 1 Z val4 [9] $end
$var wire 1 [ val4 [8] $end
$var wire 1 \ val4 [7] $end
$var wire 1 ] val4 [6] $end
$var wire 1 ^ val4 [5] $end
$var wire 1 _ val4 [4] $end
$var wire 1 ` val4 [3] $end
$var wire 1 a val4 [2] $end
$var wire 1 b val4 [1] $end
$var wire 1 c val4 [0] $end
$var wire 1 g val1_net_0 [15] $end
$var wire 1 h val1_net_0 [14] $end
$var wire 1 i val1_net_0 [13] $end
$var wire 1 j val1_net_0 [12] $end
$var wire 1 k val1_net_0 [11] $end
$var wire 1 l val1_net_0 [10] $end
$var wire 1 m val1_net_0 [9] $end
$var wire 1 n val1_net_0 [8] $end
$var wire 1 o val1_net_0 [7] $end
$var wire 1 p val1_net_0 [6] $end
$var wire 1 q val1_net_0 [5] $end
$var wire 1 r val1_net_0 [4] $end
$var wire 1 s val1_net_0 [3] $end
$var wire 1 t val1_net_0 [2] $end
$var wire 1 u val1_net_0 [1] $end
$var wire 1 v val1_net_0 [0] $end
$var wire 1 w val2_net_0 [15] $end
$var wire 1 x val2_net_0 [14] $end
$var wire 1 y val2_net_0 [13] $end
$var wire 1 z val2_net_0 [12] $end
$var wire 1 { val2_net_0 [11] $end
$var wire 1 | val2_net_0 [10] $end
$var wire 1 } val2_net_0 [9] $end
$var wire 1 ~ val2_net_0 [8] $end
$var wire 1 !! val2_net_0 [7] $end
$var wire 1 "! val2_net_0 [6] $end
$var wire 1 #! val2_net_0 [5] $end
$var wire 1 $! val2_net_0 [4] $end
$var wire 1 %! val2_net_0 [3] $end
$var wire 1 &! val2_net_0 [2] $end
$var wire 1 '! val2_net_0 [1] $end
$var wire 1 (! val2_net_0 [0] $end
$var wire 1 )! val3_net_0 [15] $end
$var wire 1 *! val3_net_0 [14] $end
$var wire 1 +! val3_net_0 [13] $end
$var wire 1 ,! val3_net_0 [12] $end
$var wire 1 -! val3_net_0 [11] $end
$var wire 1 .! val3_net_0 [10] $end
$var wire 1 /! val3_net_0 [9] $end
$var wire 1 0! val3_net_0 [8] $end
$var wire 1 1! val3_net_0 [7] $end
$var wire 1 2! val3_net_0 [6] $end
$var wire 1 3! val3_net_0 [5] $end
$var wire 1 4! val3_net_0 [4] $end
$var wire 1 5! val3_net_0 [3] $end
$var wire 1 6! val3_net_0 [2] $end
$var wire 1 7! val3_net_0 [1] $end
$var wire 1 8! val3_net_0 [0] $end
$var wire 1 9! val4_net_0 [15] $end
$var wire 1 :! val4_net_0 [14] $end
$var wire 1 ;! val4_net_0 [13] $end
$var wire 1 <! val4_net_0 [12] $end
$var wire 1 =! val4_net_0 [11] $end
$var wire 1 >! val4_net_0 [10] $end
$var wire 1 ?! val4_net_0 [9] $end
$var wire 1 @! val4_net_0 [8] $end
$var wire 1 A! val4_net_0 [7] $end
$var wire 1 B! val4_net_0 [6] $end
$var wire 1 C! val4_net_0 [5] $end
$var wire 1 D! val4_net_0 [4] $end
$var wire 1 E! val4_net_0 [3] $end
$var wire 1 F! val4_net_0 [2] $end
$var wire 1 G! val4_net_0 [1] $end
$var wire 1 H! val4_net_0 [0] $end
$var wire 1 I! val4_net_1 [15] $end
$var wire 1 J! val4_net_1 [14] $end
$var wire 1 K! val4_net_1 [13] $end
$var wire 1 L! val4_net_1 [12] $end
$var wire 1 M! val4_net_1 [11] $end
$var wire 1 N! val4_net_1 [10] $end
$var wire 1 O! val4_net_1 [9] $end
$var wire 1 P! val4_net_1 [8] $end
$var wire 1 Q! val4_net_1 [7] $end
$var wire 1 R! val4_net_1 [6] $end
$var wire 1 S! val4_net_1 [5] $end
$var wire 1 T! val4_net_1 [4] $end
$var wire 1 U! val4_net_1 [3] $end
$var wire 1 V! val4_net_1 [2] $end
$var wire 1 W! val4_net_1 [1] $end
$var wire 1 X! val4_net_1 [0] $end
$var wire 1 Y! val1_net_1 [15] $end
$var wire 1 Z! val1_net_1 [14] $end
$var wire 1 [! val1_net_1 [13] $end
$var wire 1 \! val1_net_1 [12] $end
$var wire 1 ]! val1_net_1 [11] $end
$var wire 1 ^! val1_net_1 [10] $end
$var wire 1 _! val1_net_1 [9] $end
$var wire 1 `! val1_net_1 [8] $end
$var wire 1 a! val1_net_1 [7] $end
$var wire 1 b! val1_net_1 [6] $end
$var wire 1 c! val1_net_1 [5] $end
$var wire 1 d! val1_net_1 [4] $end
$var wire 1 e! val1_net_1 [3] $end
$var wire 1 f! val1_net_1 [2] $end
$var wire 1 g! val1_net_1 [1] $end
$var wire 1 h! val1_net_1 [0] $end
$var wire 1 i! val2_net_1 [15] $end
$var wire 1 j! val2_net_1 [14] $end
$var wire 1 k! val2_net_1 [13] $end
$var wire 1 l! val2_net_1 [12] $end
$var wire 1 m! val2_net_1 [11] $end
$var wire 1 n! val2_net_1 [10] $end
$var wire 1 o! val2_net_1 [9] $end
$var wire 1 p! val2_net_1 [8] $end
$var wire 1 q! val2_net_1 [7] $end
$var wire 1 r! val2_net_1 [6] $end
$var wire 1 s! val2_net_1 [5] $end
$var wire 1 t! val2_net_1 [4] $end
$var wire 1 u! val2_net_1 [3] $end
$var wire 1 v! val2_net_1 [2] $end
$var wire 1 w! val2_net_1 [1] $end
$var wire 1 x! val2_net_1 [0] $end
$var wire 1 y! val3_net_1 [15] $end
$var wire 1 z! val3_net_1 [14] $end
$var wire 1 {! val3_net_1 [13] $end
$var wire 1 |! val3_net_1 [12] $end
$var wire 1 }! val3_net_1 [11] $end
$var wire 1 ~! val3_net_1 [10] $end
$var wire 1 !" val3_net_1 [9] $end
$var wire 1 "" val3_net_1 [8] $end
$var wire 1 #" val3_net_1 [7] $end
$var wire 1 $" val3_net_1 [6] $end
$var wire 1 %" val3_net_1 [5] $end
$var wire 1 &" val3_net_1 [4] $end
$var wire 1 '" val3_net_1 [3] $end
$var wire 1 (" val3_net_1 [2] $end
$var wire 1 )" val3_net_1 [1] $end
$var wire 1 *" val3_net_1 [0] $end

$scope module readrf_vals_0 $end
$var wire 1 d clk $end
$var wire 1 f reset $end
$var wire 1 e inc_count $end
$var reg 16 +" val1 [15:0] $end
$var reg 16 ," val2 [15:0] $end
$var reg 16 -" val3 [15:0] $end
$var reg 16 ." val4 [15:0] $end
$var reg 16 /" count [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
1#
bx +"
bx ,"
bx -"
bx ."
b0 /"
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
xy
xx
xw
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
0d
0e
1f
$end
#5000
1!
1d
b0 +"
b0 ,"
b0 -"
b0 ."
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
#10000
0#
0!
0f
0d
#15000
1!
1d
b1010000 +"
b11111111 ,"
b11111111 -"
b10000 ."
1D!
18!
17!
16!
15!
14!
13!
12!
11!
1(!
1'!
1&!
1%!
1$!
1#!
1"!
1!!
1r
1p
1d!
1b!
1x!
1w!
1v!
1u!
1t!
1s!
1r!
1q!
1*"
1)"
1("
1'"
1&"
1%"
1$"
1#"
1T!
1_
1S
1R
1Q
1P
1O
1N
1M
1L
1C
1B
1A
1@
1?
1>
1=
1<
1/
1-
#20000
0!
0d
#25000
1!
1d
#30000
1"
0!
1e
0d
#35000
1!
1d
b1 /"
#40000
0"
0!
0e
0d
#45000
1!
1d
b1 +"
b0 ,"
b0 -"
b0 ."
0D!
08!
07!
06!
05!
04!
03!
02!
01!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
1v
0r
0p
1h!
0d!
0b!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0T!
0_
0S
0R
0Q
0P
0O
0N
0M
0L
0C
0B
0A
0@
0?
0>
0=
0<
13
0/
0-
#50000
0!
0d
#55000
1!
1d
#60000
1"
0!
1e
0d
#65000
1!
1d
b10 /"
#70000
0"
0!
0e
0d
#75000
1!
1d
b10 +"
0v
1u
0h!
1g!
03
12
#80000
0!
0d
#85000
1!
1d
#90000
1#
0!
1f
0d
#95000
1!
1d
b0 +"
b0 /"
0u
0g!
02
#100000
0#
0!
0f
0d
#105000
1!
1d
b1010000 +"
b11111111 ,"
b11111111 -"
b10000 ."
1D!
18!
17!
16!
15!
14!
13!
12!
11!
1(!
1'!
1&!
1%!
1$!
1#!
1"!
1!!
1r
1p
1d!
1b!
1x!
1w!
1v!
1u!
1t!
1s!
1r!
1q!
1*"
1)"
1("
1'"
1&"
1%"
1$"
1#"
1T!
1_
1S
1R
1Q
1P
1O
1N
1M
1L
1C
1B
1A
1@
1?
1>
1=
1<
1/
1-
#110000
0!
0d
#115000
1!
1d
#120000
0!
0d
#125000
1!
1d
#130000
0!
0d
#135000
1!
1d
#140000
0!
0d
#145000
1!
1d

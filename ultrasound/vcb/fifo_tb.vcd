$date
	Sat Aug 16 14:16:32 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_fifo $end
$var wire 3 ! wr_ptr [2:0] $end
$var wire 3 " rd_ptr [2:0] $end
$var wire 4 # fifo_count [3:0] $end
$var wire 16 $ data_out [15:0] $end
$var reg 1 % clk $end
$var reg 16 & data_in [15:0] $end
$var reg 1 ' reset $end
$var integer 32 ( i [31:0] $end
$scope module dut $end
$var wire 1 % clk $end
$var wire 16 ) data_in [15:0] $end
$var wire 16 * data_out [15:0] $end
$var wire 1 ' reset $end
$var reg 4 + fifo_count [3:0] $end
$var reg 3 , rd_ptr [2:0] $end
$var reg 3 - wr_ptr [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
b0 ,
b0 +
bx *
b0 )
bx (
1'
b0 &
0%
bx $
b0 #
b0 "
b0 !
$end
#5
1%
#10
0%
#15
1%
#20
0%
b100000000 &
b100000000 )
b0 (
0'
#25
b1 #
b1 +
b1 !
b1 -
b100000000 $
b100000000 *
1%
#30
0%
b100000001 &
b100000001 )
b1 (
#35
b100000001 $
b100000001 *
b1 "
b1 ,
b0 #
b0 +
b10 !
b10 -
1%
#40
0%
b100000010 &
b100000010 )
b10 (
#45
b1 #
b1 +
b11 !
b11 -
1%
#50
0%
b100000011 &
b100000011 )
b11 (
#55
b100000010 $
b100000010 *
b10 "
b10 ,
b0 #
b0 +
b100 !
b100 -
1%
#60
0%
b100000100 &
b100000100 )
b100 (
#65
b1 #
b1 +
b101 !
b101 -
1%
#70
0%
b100000101 &
b100000101 )
b101 (
#75
b100000011 $
b100000011 *
b11 "
b11 ,
b0 #
b0 +
b110 !
b110 -
1%
#80
0%
b100000110 &
b100000110 )
b110 (
#85
b1 #
b1 +
b111 !
b111 -
1%
#90
0%
b100000111 &
b100000111 )
b111 (
#95
b100000100 $
b100000100 *
b100 "
b100 ,
b0 #
b0 +
b0 !
b0 -
1%
#100
0%
b1000 (
#105
b1 #
b1 +
b1 !
b1 -
1%
#110
0%
#115
bx $
bx *
b101 "
b101 ,
b0 #
b0 +
b10 !
b10 -
1%
#120
0%
#125
b1 #
b1 +
b11 !
b11 -
1%
#130
0%
#135
b110 "
b110 ,
b0 #
b0 +
b100 !
b100 -
1%
#140
0%
#145
b1 #
b1 +
b101 !
b101 -
1%
#150
0%
#155
b111 "
b111 ,
b0 #
b0 +
b110 !
b110 -
1%
#160
0%
#165
b1 #
b1 +
b111 !
b111 -
1%
#170
0%
#175
b100000111 $
b100000111 *
b0 "
b0 ,
b0 #
b0 +
b0 !
b0 -
1%
#180
0%
#185
b1 #
b1 +
b1 !
b1 -
1%
#190
0%
#195
b1 "
b1 ,
b0 #
b0 +
b10 !
b10 -
1%
#200
0%
b1000000000 &
b1000000000 )
b0 (
#205
b1 #
b1 +
b11 !
b11 -
1%
#210
0%
b1000000001 &
b1000000001 )
b1 (
#215
b1000000000 $
b1000000000 *
b10 "
b10 ,
b0 #
b0 +
b100 !
b100 -
1%
#220
0%
b1000000010 &
b1000000010 )
b10 (
#225
b1 #
b1 +
b101 !
b101 -
1%
#230
0%
b1000000011 &
b1000000011 )
b11 (
#235
b1000000001 $
b1000000001 *
b11 "
b11 ,
b0 #
b0 +
b110 !
b110 -
1%
#240
0%
b1000000100 &
b1000000100 )
b100 (
#245
b1 #
b1 +
b111 !
b111 -
1%
#250
0%
b1000000101 &
b1000000101 )
b101 (
#255
b1000000010 $
b1000000010 *
b100 "
b100 ,
b0 #
b0 +
b0 !
b0 -
1%
#260
0%
b1000000110 &
b1000000110 )
b110 (
#265
b1 #
b1 +
b1 !
b1 -
1%
#270
0%
b1000000111 &
b1000000111 )
b111 (
#275
bx $
bx *
b101 "
b101 ,
b0 #
b0 +
b10 !
b10 -
1%
#280
0%
b1000 (
#285
b1 #
b1 +
b11 !
b11 -
1%
#290
0%
#295
b110 "
b110 ,
b0 #
b0 +
b100 !
b100 -
1%
#300
0%
#305
b1 #
b1 +
b101 !
b101 -
1%
#310
0%
#315
b111 "
b111 ,
b0 #
b0 +
b110 !
b110 -
1%
#320
0%
#325
b1 #
b1 +
b111 !
b111 -
1%
#330
0%
#335
b1000000110 $
b1000000110 *
b0 "
b0 ,
b0 #
b0 +
b0 !
b0 -
1%
#340
0%
#345
b1 #
b1 +
b1 !
b1 -
b1000000111 $
b1000000111 *
1%
#350
0%
#355
b1 "
b1 ,
b0 #
b0 +
b10 !
b10 -
1%
#360
0%
#365
b1 #
b1 +
b11 !
b11 -
1%
#370
0%
#375
b10 "
b10 ,
b0 #
b0 +
b100 !
b100 -
1%
#380
0%
